window.jest_html_reporters_callback__({"numFailedTestSuites":1,"numFailedTests":3,"numPassedTestSuites":2,"numPassedTests":7,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":3,"numTotalTests":10,"startTime":1758566327954,"success":false,"testResults":[{"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1758566329918,"loadTestEnvironmentEnd":1758566328579,"loadTestEnvironmentStart":1758566328429,"runtime":1337,"setupAfterEnvEnd":1758566329595,"setupAfterEnvStart":1758566329595,"setupFilesEnd":1758566328581,"setupFilesStart":1758566328581,"slow":false,"start":1758566328581},"testFilePath":"C:\\Aqua\\QaAutoP\\less14\\tests\\userSettings.mock.test.mjs","failureMessage":null,"testResults":[{"ancestorTitles":["userSettings.service (моки Axios)"],"duration":90,"failureMessages":[],"fullName":"userSettings.service (моки Axios) getUserSettings: успіх (200) — повертає payload","status":"passed","title":"getUserSettings: успіх (200) — повертає payload"},{"ancestorTitles":["userSettings.service (моки Axios)"],"duration":10,"failureMessages":[],"fullName":"userSettings.service (моки Axios) getUserSettings: помилка (401) — прокидує Axios-помилку","status":"passed","title":"getUserSettings: помилка (401) — прокидує Axios-помилку"},{"ancestorTitles":["userSettings.service (моки Axios)"],"duration":4,"failureMessages":[],"fullName":"userSettings.service (моки Axios) updateUserSettings: успіх (200) — відправляє тіло і повертає payload","status":"passed","title":"updateUserSettings: успіх (200) — відправляє тіло і повертає payload"},{"ancestorTitles":["userSettings.service (моки Axios)"],"duration":2,"failureMessages":[],"fullName":"userSettings.service (моки Axios) updateUserSettings: помилка (400) — прокидує Axios-помилку","status":"passed","title":"updateUserSettings: помилка (400) — прокидує Axios-помилку"}]},{"numFailingTests":3,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1758566331759,"loadTestEnvironmentEnd":1758566328571,"loadTestEnvironmentStart":1758566328415,"runtime":3185,"setupAfterEnvEnd":1758566329596,"setupAfterEnvStart":1758566329596,"setupFilesEnd":1758566328574,"setupFilesStart":1758566328574,"slow":false,"start":1758566328574},"testFilePath":"C:\\Aqua\\QaAutoP\\less14\\tests\\user.flow.test.mjs","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mUser flow: signup → settings GET/PUT (через cookie sid) › POST /auth/signup → 201 створює користувача і аутентифікує (ставить sid)\u001b[39m\u001b[22m\n\n    HTTP 400: Request failed with status code 400\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 79 |\u001b[39m     logError({ id\u001b[33m,\u001b[39m status\u001b[33m,\u001b[39m durationMs\u001b[33m,\u001b[39m message\u001b[33m:\u001b[39m error\u001b[33m.\u001b[39mmessage\u001b[33m,\u001b[39m data })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 80 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 81 |\u001b[39m     \u001b[36mconst\u001b[39m enriched \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`HTTP ${status ?? 'ERR'}: ${error.message}`\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 82 |\u001b[39m     enriched\u001b[33m.\u001b[39mstatus \u001b[33m=\u001b[39m status\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 83 |\u001b[39m     enriched\u001b[33m.\u001b[39mresponseBody \u001b[33m=\u001b[39m data\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 84 |\u001b[39m     enriched\u001b[33m.\u001b[39mrequestId \u001b[33m=\u001b[39m id\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mless14/src/http/axiosClient.js\u001b[2m:81:22\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Axios.request (\u001b[22m\u001b[2mnode_modules/axios/lib/core/Axios.js\u001b[2m:40:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat signupAndCaptureSid (\u001b[22m\u001b[2mless14/src/auth/auth.api.js\u001b[2m:5:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mless14/tests/user.flow.test.mjs\u001b[39m\u001b[0m\u001b[2m:12:17)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mUser flow: signup → settings GET/PUT (через cookie sid) › GET /users/settings → 200 повертає налаштування (авторизація через sid cookie)\u001b[39m\u001b[22m\n\n    HTTP 401: Request failed with status code 401\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 79 |\u001b[39m     logError({ id\u001b[33m,\u001b[39m status\u001b[33m,\u001b[39m durationMs\u001b[33m,\u001b[39m message\u001b[33m:\u001b[39m error\u001b[33m.\u001b[39mmessage\u001b[33m,\u001b[39m data })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 80 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 81 |\u001b[39m     \u001b[36mconst\u001b[39m enriched \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`HTTP ${status ?? 'ERR'}: ${error.message}`\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 82 |\u001b[39m     enriched\u001b[33m.\u001b[39mstatus \u001b[33m=\u001b[39m status\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 83 |\u001b[39m     enriched\u001b[33m.\u001b[39mresponseBody \u001b[33m=\u001b[39m data\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 84 |\u001b[39m     enriched\u001b[33m.\u001b[39mrequestId \u001b[33m=\u001b[39m id\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mless14/src/http/axiosClient.js\u001b[2m:81:22\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Axios.request (\u001b[22m\u001b[2mnode_modules/axios/lib/core/Axios.js\u001b[2m:40:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mless14/tests/user.flow.test.mjs\u001b[39m\u001b[0m\u001b[2m:23:17)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mUser flow: signup → settings GET/PUT (через cookie sid) › PUT /users/settings → 200 оновлює налаштування (авторизація через sid cookie)\u001b[39m\u001b[22m\n\n    HTTP 401: Request failed with status code 401\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 79 |\u001b[39m     logError({ id\u001b[33m,\u001b[39m status\u001b[33m,\u001b[39m durationMs\u001b[33m,\u001b[39m message\u001b[33m:\u001b[39m error\u001b[33m.\u001b[39mmessage\u001b[33m,\u001b[39m data })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 80 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 81 |\u001b[39m     \u001b[36mconst\u001b[39m enriched \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`HTTP ${status ?? 'ERR'}: ${error.message}`\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 82 |\u001b[39m     enriched\u001b[33m.\u001b[39mstatus \u001b[33m=\u001b[39m status\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 83 |\u001b[39m     enriched\u001b[33m.\u001b[39mresponseBody \u001b[33m=\u001b[39m data\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 84 |\u001b[39m     enriched\u001b[33m.\u001b[39mrequestId \u001b[33m=\u001b[39m id\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mless14/src/http/axiosClient.js\u001b[2m:81:22\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Axios.request (\u001b[22m\u001b[2mnode_modules/axios/lib/core/Axios.js\u001b[2m:40:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mless14/tests/user.flow.test.mjs\u001b[39m\u001b[0m\u001b[2m:38:17)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["User flow: signup → settings GET/PUT (через cookie sid)"],"duration":339,"failureMessages":["Error: HTTP 400: Request failed with status code 400\n    at C:\\Aqua\\QaAutoP\\less14\\src\\http\\axiosClient.js:81:22\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at Axios.request (C:\\Aqua\\QaAutoP\\node_modules\\axios\\lib\\core\\Axios.js:40:14)\n    at signupAndCaptureSid (C:\\Aqua\\QaAutoP\\less14\\src\\auth\\auth.api.js:5:15)\n    at Object.<anonymous> (C:\\Aqua\\QaAutoP\\less14\\tests\\user.flow.test.mjs:12:17)"],"fullName":"User flow: signup → settings GET/PUT (через cookie sid) POST /auth/signup → 201 створює користувача і аутентифікує (ставить sid)","status":"failed","title":"POST /auth/signup → 201 створює користувача і аутентифікує (ставить sid)"},{"ancestorTitles":["User flow: signup → settings GET/PUT (через cookie sid)"],"duration":334,"failureMessages":["Error: HTTP 401: Request failed with status code 401\n    at C:\\Aqua\\QaAutoP\\less14\\src\\http\\axiosClient.js:81:22\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at Axios.request (C:\\Aqua\\QaAutoP\\node_modules\\axios\\lib\\core\\Axios.js:40:14)\n    at Object.<anonymous> (C:\\Aqua\\QaAutoP\\less14\\tests\\user.flow.test.mjs:23:17)"],"fullName":"User flow: signup → settings GET/PUT (через cookie sid) GET /users/settings → 200 повертає налаштування (авторизація через sid cookie)","status":"failed","title":"GET /users/settings → 200 повертає налаштування (авторизація через sid cookie)"},{"ancestorTitles":["User flow: signup → settings GET/PUT (через cookie sid)"],"duration":56,"failureMessages":["Error: HTTP 401: Request failed with status code 401\n    at C:\\Aqua\\QaAutoP\\less14\\src\\http\\axiosClient.js:81:22\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at Axios.request (C:\\Aqua\\QaAutoP\\node_modules\\axios\\lib\\core\\Axios.js:40:14)\n    at Object.<anonymous> (C:\\Aqua\\QaAutoP\\less14\\tests\\user.flow.test.mjs:38:17)"],"fullName":"User flow: signup → settings GET/PUT (через cookie sid) PUT /users/settings → 200 оновлює налаштування (авторизація через sid cookie)","status":"failed","title":"PUT /users/settings → 200 оновлює налаштування (авторизація через sid cookie)"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1758566333424,"loadTestEnvironmentEnd":1758566328571,"loadTestEnvironmentStart":1758566328398,"runtime":4851,"setupAfterEnvEnd":1758566329588,"setupAfterEnvStart":1758566329588,"setupFilesEnd":1758566328573,"setupFilesStart":1758566328573,"slow":false,"start":1758566328573},"testFilePath":"C:\\Aqua\\QaAutoP\\less14\\tests\\auth.signup.test.mjs","failureMessage":null,"testResults":[{"ancestorTitles":["POST /auth/signup + PUT /users/settings (кука sid)"],"duration":1115,"failureMessages":[],"fullName":"POST /auth/signup + PUT /users/settings (кука sid) 201: створює користувача повертає налаштування","status":"passed","title":"201: створює користувача повертає налаштування"},{"ancestorTitles":["POST /auth/signup + PUT /users/settings (кука sid)"],"duration":888,"failureMessages":[],"fullName":"POST /auth/signup + PUT /users/settings (кука sid) 400: дубльований email  Bad Request","status":"passed","title":"400: дубльований email  Bad Request"},{"ancestorTitles":["POST /auth/signup + PUT /users/settings (кука sid)"],"duration":854,"failureMessages":[],"fullName":"POST /auth/signup + PUT /users/settings (кука sid) PUT /users/settings: використовує sid з cookie (200)","status":"passed","title":"PUT /users/settings: використовує sid з cookie (200)"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":[],"coverageDirectory":"C:\\Aqua\\QaAutoP\\coverage","coverageProvider":"babel","coverageReporters":["json","text","lcov","clover"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":11,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["C:\\Aqua\\QaAutoP\\node_modules\\jest-html-reporters\\index.js",{}]],"rootDir":"C:\\Aqua\\QaAutoP","runInBand":false,"runTestsByPath":false,"seed":1607846894,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPatterns":{"patterns":[],"type":"TestPathPatterns"},"testSequencer":"C:\\Aqua\\QaAutoP\\node_modules\\@jest\\test-sequencer\\build\\index.js","updateSnapshot":"new","useStderr":false,"waitForUnhandledRejections":false,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1758566333525,"_reporterOptions":{"publicPath":"C:\\Aqua\\QaAutoP","filename":"jest_html_reporters.html","expand":false,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})